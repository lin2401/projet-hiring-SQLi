package com.hiring.entities;
// Generated 10 oct. 2018 14:34:30 by Hibernate Tools 5.1.10.Final

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CandidateHasAssessment generated by hbm2java
 */
@Entity
@Table(name = "candidate_has_assessment", catalog = "hiring")
public class CandidateHasAssessment implements java.io.Serializable {

	private CandidateHasAssessmentId id;
	private Assessment assessment;
	private AssessmentType assessmentType;
	private Candidate candidate;
	private Float score;
	private Date passingDate;

	public CandidateHasAssessment() {
	}

	public CandidateHasAssessment(CandidateHasAssessmentId id, Assessment assessment, AssessmentType assessmentType,
			Candidate candidate) {
		this.id = id;
		this.assessment = assessment;
		this.assessmentType = assessmentType;
		this.candidate = candidate;
	}

	public CandidateHasAssessment(CandidateHasAssessmentId id, Assessment assessment, AssessmentType assessmentType,
			Candidate candidate, Float score, Date passingDate) {
		this.id = id;
		this.assessment = assessment;
		this.assessmentType = assessmentType;
		this.candidate = candidate;
		this.score = score;
		this.passingDate = passingDate;
	}

	@EmbeddedId

	@AttributeOverrides({
			@AttributeOverride(name = "candidateIdcandidate", column = @Column(name = "candidate_idcandidate", nullable = false)),
			@AttributeOverride(name = "assessmentIdassessment", column = @Column(name = "assessment_idassessment", nullable = false)),
			@AttributeOverride(name = "assessmentTypeId", column = @Column(name = "assessment_type_id", nullable = false)) })
	public CandidateHasAssessmentId getId() {
		return this.id;
	}

	public void setId(CandidateHasAssessmentId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "assessment_idassessment", nullable = false, insertable = false, updatable = false)
	public Assessment getAssessment() {
		return this.assessment;
	}

	public void setAssessment(Assessment assessment) {
		this.assessment = assessment;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "assessment_type_id", nullable = false, insertable = false, updatable = false)
	public AssessmentType getAssessmentType() {
		return this.assessmentType;
	}

	public void setAssessmentType(AssessmentType assessmentType) {
		this.assessmentType = assessmentType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "candidate_idcandidate", nullable = false, insertable = false, updatable = false)
	public Candidate getCandidate() {
		return this.candidate;
	}

	public void setCandidate(Candidate candidate) {
		this.candidate = candidate;
	}

	@Column(name = "score", precision = 12, scale = 0)
	public Float getScore() {
		return this.score;
	}

	public void setScore(Float score) {
		this.score = score;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "passing_date", length = 10)
	public Date getPassingDate() {
		return this.passingDate;
	}

	public void setPassingDate(Date passingDate) {
		this.passingDate = passingDate;
	}

}
