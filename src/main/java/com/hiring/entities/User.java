package com.hiring.entities;
// Generated 10 oct. 2018 14:34:30 by Hibernate Tools 5.1.10.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "user", catalog = "hiring", uniqueConstraints = @UniqueConstraint(columnNames = "login"))
public class User implements java.io.Serializable {

	private int iduser;
	private Person person;
	private Role role;
	private String login;
	private String password;
	private Set interviews = new HashSet(0);

	public User() {
	}

	public User(int iduser, Person person, Role role, String login, String password) {
		this.iduser = iduser;
		this.person = person;
		this.role = role;
		this.login = login;
		this.password = password;
	}

	public User(int iduser, Person person, Role role, String login, String password, Set interviews) {
		this.iduser = iduser;
		this.person = person;
		this.role = role;
		this.login = login;
		this.password = password;
		this.interviews = interviews;
	}

	@Id

	@Column(name = "iduser", unique = true, nullable = false)
	public int getIduser() {
		return this.iduser;
	}

	public void setIduser(int iduser) {
		this.iduser = iduser;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "person_idpersonn", nullable = false)
	public Person getPerson() {
		return this.person;
	}

	public void setPerson(Person person) {
		this.person = person;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "role_idrole", nullable = false)
	public Role getRole() {
		return this.role;
	}

	public void setRole(Role role) {
		this.role = role;
	}

	@Column(name = "login", unique = true, nullable = false, length = 45)
	public String getLogin() {
		return this.login;
	}

	public void setLogin(String login) {
		this.login = login;
	}

	@Column(name = "password", nullable = false, length = 256)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "user")
	public Set getInterviews() {
		return this.interviews;
	}

	public void setInterviews(Set interviews) {
		this.interviews = interviews;
	}

}
